version: 2
jobs:
  build-test:
    docker:
      - image: circleci/node:7.10

    working_directory: ~/react-app

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          
      - run:
          name: install gulp cli
          command: |
            sudo npm install --global gulp-cli

      - run:
          name: install dependencies
          command: |
            npm install
            
      - run:
          name: compile sass
          command: |
            gulp sass
  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}  

      # run tests!
      - run:
          name: run tests
          command: |
            npm test

  build-docker-image:
    build:
      working_directory: /app
      docker:
        - image: docker:17.05.0-ce-git
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Install dependencies
            command: |
              apk add --no-cache \
                py-pip=9.0.0-r1
              pip install \
                docker-compose==1.12.0 \
                awscli==1.11.76
        - restore_cache:
            keys:
              - v1-{{ .Branch }}
            paths:
              - /caches/app.tar
        - run:
            name: Load Docker image layer cache
            command: |
              set +o pipefail
              docker load -i /caches/app.tar | true
        - run:
            name: Build application Docker image
            command: |
              docker build --cache-from=app -t app .
        - run:
            name: Save Docker image layer cache
            command: |
              mkdir -p /caches
              docker save -o /caches/app.tar app
        - save_cache:
            key: v1-{{ .Branch }}-{{ epoch }}
            paths:
              - /caches/app.tar
        - run:
            name: Run tests
            command: |
              docker-compose -f ./docker-compose.test.yml up
        - run:
            name: Push application Docker image to docker hub
            command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                docker login --username ${username} --password ${password}
                docker tag app "${username}/app:reactapp"
                docker push "${username}/app:reactapp"
              fi



workflows:
  version: 2
  build_and_test:
    jobs:
      - build-test
      - build-docker-image:
          requires:
            - build-test


